import { AssertDelegate, AssertFunc, AnyAssertFunc, TypeOf } from "./types";
import { Assertion } from "./Assertion";
export declare type CastDelegate<FromT, ToT> = (from: FromT) => ToT;
export declare function assertion<T>(assertion: Assertion<T>): AssertDelegate<T>;
export declare function oneOf<T0 extends string>(...arr: (T0)[]): AssertDelegate<T0>;
export declare function oneOf<T0 extends number>(...arr: (T0)[]): AssertDelegate<T0>;
export declare function oneOf<T0 extends boolean>(...arr: (T0)[]): AssertDelegate<T0>;
export declare function oneOf<T0>(...arr: (T0)[]): AssertDelegate<T0>;
export declare function oneOf<T0, T1>(...arr: (T0 | T1)[]): AssertDelegate<T0 | T1>;
export declare function oneOf<T0, T1, T2>(...arr: (T0 | T1 | T2)[]): AssertDelegate<T0 | T1 | T2>;
export declare function oneOf<T0, T1, T2, T3>(...arr: (T0 | T1 | T2 | T3)[]): AssertDelegate<T0 | T1 | T2 | T3>;
export declare function oneOf<T0, T1, T2, T3, T4>(...arr: (T0 | T1 | T2 | T3 | T4)[]): AssertDelegate<T0 | T1 | T2 | T3 | T4>;
export declare function oneOf(...arr: (any)[]): AssertDelegate<any>;
export declare function or<F0 extends AnyAssertFunc>(f0: F0): AssertDelegate<TypeOf<F0>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc>(f0: F0, f1: F1): AssertDelegate<TypeOf<F0> | TypeOf<F1>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10> | TypeOf<F11>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10> | TypeOf<F11> | TypeOf<F12>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10> | TypeOf<F11> | TypeOf<F12> | TypeOf<F13>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10> | TypeOf<F11> | TypeOf<F12> | TypeOf<F13> | TypeOf<F14>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10> | TypeOf<F11> | TypeOf<F12> | TypeOf<F13> | TypeOf<F14> | TypeOf<F15>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc, F16 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10> | TypeOf<F11> | TypeOf<F12> | TypeOf<F13> | TypeOf<F14> | TypeOf<F15> | TypeOf<F16>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc, F16 extends AnyAssertFunc, F17 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16, f17: F17): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10> | TypeOf<F11> | TypeOf<F12> | TypeOf<F13> | TypeOf<F14> | TypeOf<F15> | TypeOf<F16> | TypeOf<F17>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc, F16 extends AnyAssertFunc, F17 extends AnyAssertFunc, F18 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16, f17: F17, f18: F18): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10> | TypeOf<F11> | TypeOf<F12> | TypeOf<F13> | TypeOf<F14> | TypeOf<F15> | TypeOf<F16> | TypeOf<F17> | TypeOf<F18>>;
export declare function or<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc, F16 extends AnyAssertFunc, F17 extends AnyAssertFunc, F18 extends AnyAssertFunc, F19 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16, f17: F17, f18: F18, f19: F19): AssertDelegate<TypeOf<F0> | TypeOf<F1> | TypeOf<F2> | TypeOf<F3> | TypeOf<F4> | TypeOf<F5> | TypeOf<F6> | TypeOf<F7> | TypeOf<F8> | TypeOf<F9> | TypeOf<F10> | TypeOf<F11> | TypeOf<F12> | TypeOf<F13> | TypeOf<F14> | TypeOf<F15> | TypeOf<F16> | TypeOf<F17> | TypeOf<F18> | TypeOf<F19>>;
export declare function or<F extends AnyAssertFunc>(...arr: F[]): AssertDelegate<TypeOf<F>>;
export declare function and<F0 extends AnyAssertFunc>(f0: F0): AssertDelegate<TypeOf<F0>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc>(f0: F0, f1: F1): AssertDelegate<TypeOf<F0> & TypeOf<F1>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc, F16 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15> & TypeOf<F16>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc, F16 extends AnyAssertFunc, F17 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16, f17: F17): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15> & TypeOf<F16> & TypeOf<F17>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc, F16 extends AnyAssertFunc, F17 extends AnyAssertFunc, F18 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16, f17: F17, f18: F18): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15> & TypeOf<F16> & TypeOf<F17> & TypeOf<F18>>;
export declare function and<F0 extends AnyAssertFunc, F1 extends AnyAssertFunc, F2 extends AnyAssertFunc, F3 extends AnyAssertFunc, F4 extends AnyAssertFunc, F5 extends AnyAssertFunc, F6 extends AnyAssertFunc, F7 extends AnyAssertFunc, F8 extends AnyAssertFunc, F9 extends AnyAssertFunc, F10 extends AnyAssertFunc, F11 extends AnyAssertFunc, F12 extends AnyAssertFunc, F13 extends AnyAssertFunc, F14 extends AnyAssertFunc, F15 extends AnyAssertFunc, F16 extends AnyAssertFunc, F17 extends AnyAssertFunc, F18 extends AnyAssertFunc, F19 extends AnyAssertFunc>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16, f17: F17, f18: F18, f19: F19): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15> & TypeOf<F16> & TypeOf<F17> & TypeOf<F18> & TypeOf<F19>>;
export declare function cast<FromF extends AnyAssertFunc, ToF extends AnyAssertFunc>(canCast: FromF, castDelegate: CastDelegate<TypeOf<FromF>, TypeOf<ToF>>, assert: ToF): AssertDelegate<TypeOf<ToF>>;
export declare function castFirst<FromF extends AnyAssertFunc, ToF extends AnyAssertFunc>(canCast: FromF, castDelegate: CastDelegate<TypeOf<FromF>, TypeOf<ToF>>, assert: ToF): AssertDelegate<TypeOf<ToF>>;
export declare function assert<F extends AnyAssertFunc>(assert: F): (target: Object, propertyKey: string | symbol) => void;
export declare function optional<F extends AnyAssertFunc>(assert: F): AssertDelegate<TypeOf<F> | undefined>;
export declare function nullable<F extends AnyAssertFunc>(assert: F): AssertDelegate<TypeOf<F> | null>;
export declare function maybe<F extends AnyAssertFunc>(assert: F): AssertDelegate<TypeOf<F> | undefined | null>;
export declare function notOptional<F extends AnyAssertFunc>(assert: F): AssertDelegate<Exclude<TypeOf<F>, undefined>>;
export declare function notNullable<F extends AnyAssertFunc>(assert: F): AssertDelegate<Exclude<TypeOf<F>, null>>;
export declare function notMaybe<F extends AnyAssertFunc>(assert: F): AssertDelegate<Exclude<TypeOf<F>, null | undefined>>;
export declare function array<F extends AnyAssertFunc>(assert: F): AssertDelegate<TypeOf<F>[]>;
export declare function date(): AssertDelegate<Date>;
export declare function any(): AssertDelegate<any>;
export declare enum Enum {
}
export declare function enumeration<E extends typeof Enum>(e: E): AssertDelegate<E[keyof E]>;
export declare function enumeration(e: {}): AssertDelegate<string | number>;
export declare function boolean(): AssertDelegate<boolean>;
export declare function number(): AssertDelegate<number>;
export declare function integer(): AssertDelegate<number>;
export declare function naturalNumber(): AssertDelegate<number>;
export declare function string(): AssertDelegate<string>;
export declare function numberToBoolean(): AssertDelegate<boolean>;
export declare function stringToBoolean(): AssertDelegate<boolean>;
export declare function stringToNumber(): AssertDelegate<number>;
export declare function stringToInteger(): AssertDelegate<number>;
export declare function stringToNaturalNumber(): AssertDelegate<number>;
export declare function nil(): AssertDelegate<null>;
export declare function undef(): AssertDelegate<undefined>;
export declare function varChar(min: number, max: number): AssertDelegate<string>;
export declare function varChar(max: number): AssertDelegate<string>;
export declare function numberToTrue(): AssertDelegate<true>;
export declare function numberToFalse(): AssertDelegate<false>;
export declare function jsonObjectStr(): AssertDelegate<string>;
export declare function jsonObject(): AssertDelegate<Object>;
export declare function intersect<F0 extends AssertFunc<object>>(f0: F0): AssertDelegate<TypeOf<F0>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>>(f0: F0, f1: F1): AssertDelegate<TypeOf<F0> & TypeOf<F1>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>, F11 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>, F11 extends AssertFunc<object>, F12 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>, F11 extends AssertFunc<object>, F12 extends AssertFunc<object>, F13 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>, F11 extends AssertFunc<object>, F12 extends AssertFunc<object>, F13 extends AssertFunc<object>, F14 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>, F11 extends AssertFunc<object>, F12 extends AssertFunc<object>, F13 extends AssertFunc<object>, F14 extends AssertFunc<object>, F15 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>, F11 extends AssertFunc<object>, F12 extends AssertFunc<object>, F13 extends AssertFunc<object>, F14 extends AssertFunc<object>, F15 extends AssertFunc<object>, F16 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15> & TypeOf<F16>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>, F11 extends AssertFunc<object>, F12 extends AssertFunc<object>, F13 extends AssertFunc<object>, F14 extends AssertFunc<object>, F15 extends AssertFunc<object>, F16 extends AssertFunc<object>, F17 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16, f17: F17): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15> & TypeOf<F16> & TypeOf<F17>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>, F11 extends AssertFunc<object>, F12 extends AssertFunc<object>, F13 extends AssertFunc<object>, F14 extends AssertFunc<object>, F15 extends AssertFunc<object>, F16 extends AssertFunc<object>, F17 extends AssertFunc<object>, F18 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16, f17: F17, f18: F18): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15> & TypeOf<F16> & TypeOf<F17> & TypeOf<F18>>;
export declare function intersect<F0 extends AssertFunc<object>, F1 extends AssertFunc<object>, F2 extends AssertFunc<object>, F3 extends AssertFunc<object>, F4 extends AssertFunc<object>, F5 extends AssertFunc<object>, F6 extends AssertFunc<object>, F7 extends AssertFunc<object>, F8 extends AssertFunc<object>, F9 extends AssertFunc<object>, F10 extends AssertFunc<object>, F11 extends AssertFunc<object>, F12 extends AssertFunc<object>, F13 extends AssertFunc<object>, F14 extends AssertFunc<object>, F15 extends AssertFunc<object>, F16 extends AssertFunc<object>, F17 extends AssertFunc<object>, F18 extends AssertFunc<object>, F19 extends AssertFunc<object>>(f0: F0, f1: F1, f2: F2, f3: F3, f4: F4, f5: F5, f6: F6, f7: F7, f8: F8, f9: F9, f10: F10, f11: F11, f12: F12, f13: F13, f14: F14, f15: F15, f16: F16, f17: F17, f18: F18, f19: F19): AssertDelegate<TypeOf<F0> & TypeOf<F1> & TypeOf<F2> & TypeOf<F3> & TypeOf<F4> & TypeOf<F5> & TypeOf<F6> & TypeOf<F7> & TypeOf<F8> & TypeOf<F9> & TypeOf<F10> & TypeOf<F11> & TypeOf<F12> & TypeOf<F13> & TypeOf<F14> & TypeOf<F15> & TypeOf<F16> & TypeOf<F17> & TypeOf<F18> & TypeOf<F19>>;
