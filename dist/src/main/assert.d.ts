import { AssertDelegate } from "./AssertDelegate";
import { Assertion } from "./Assertion";
export declare type CastDelegate<FromT, ToT> = (from: FromT) => ToT;
export declare type Constructor<T> = {
    new (): T;
};
export declare type AssertFunc<T> = Constructor<T> | AssertDelegate<T>;
export declare function nested<T>(ctor: Constructor<T>): AssertDelegate<T>;
export declare function nestedExact<T>(ctor: Constructor<T>): AssertDelegate<T>;
export declare function assertion<T>(assertion: Assertion<T>): AssertDelegate<T>;
export declare function oneOf<T0 extends string>(...arr: (T0)[]): AssertDelegate<T0>;
export declare function oneOf<T0 extends number>(...arr: (T0)[]): AssertDelegate<T0>;
export declare function oneOf<T0 extends boolean>(...arr: (T0)[]): AssertDelegate<T0>;
export declare function oneOf<T0>(...arr: (T0)[]): AssertDelegate<T0>;
export declare function oneOf<T0, T1>(...arr: (T0 | T1)[]): AssertDelegate<T0 | T1>;
export declare function oneOf<T0, T1, T2>(...arr: (T0 | T1 | T2)[]): AssertDelegate<T0 | T1 | T2>;
export declare function oneOf<T0, T1, T2, T3>(...arr: (T0 | T1 | T2 | T3)[]): AssertDelegate<T0 | T1 | T2 | T3>;
export declare function oneOf<T0, T1, T2, T3, T4>(...arr: (T0 | T1 | T2 | T3 | T4)[]): AssertDelegate<T0 | T1 | T2 | T3 | T4>;
export declare function oneOf(...arr: (any)[]): AssertDelegate<any>;
export declare function or<T0>(i0: AssertDelegate<T0>): AssertDelegate<T0>;
export declare function or<T0, T1>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>): AssertDelegate<T0 | T1>;
export declare function or<T0, T1, T2>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>): AssertDelegate<T0 | T1 | T2>;
export declare function or<T0, T1, T2, T3>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>): AssertDelegate<T0 | T1 | T2 | T3>;
export declare function or<T0, T1, T2, T3, T4>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>): AssertDelegate<T0 | T1 | T2 | T3 | T4>;
export declare function or<T0, T1, T2, T3, T4, T5>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5>;
export declare function or<T0, T1, T2, T3, T4, T5, T6>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10 | T11>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10 | T11 | T12>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10 | T11 | T12 | T13>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10 | T11 | T12 | T13 | T14>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10 | T11 | T12 | T13 | T14 | T15>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>, i16: AssertDelegate<T16>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10 | T11 | T12 | T13 | T14 | T15 | T16>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>, i16: AssertDelegate<T16>, i17: AssertDelegate<T17>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10 | T11 | T12 | T13 | T14 | T15 | T16 | T17>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>, i16: AssertDelegate<T16>, i17: AssertDelegate<T17>, i18: AssertDelegate<T18>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10 | T11 | T12 | T13 | T14 | T15 | T16 | T17 | T18>;
export declare function or<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>, i16: AssertDelegate<T16>, i17: AssertDelegate<T17>, i18: AssertDelegate<T18>, i19: AssertDelegate<T19>): AssertDelegate<T0 | T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10 | T11 | T12 | T13 | T14 | T15 | T16 | T17 | T18 | T19>;
export declare function or<T>(...arr: AssertDelegate<T>[]): AssertDelegate<T>;
export declare function and<T0>(i0: AssertDelegate<T0>): AssertDelegate<T0>;
export declare function and<T0, T1>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>): AssertDelegate<T0 & T1>;
export declare function and<T0, T1, T2>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>): AssertDelegate<T0 & T1 & T2>;
export declare function and<T0, T1, T2, T3>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>): AssertDelegate<T0 & T1 & T2 & T3>;
export declare function and<T0, T1, T2, T3, T4>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>): AssertDelegate<T0 & T1 & T2 & T3 & T4>;
export declare function and<T0, T1, T2, T3, T4, T5>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5>;
export declare function and<T0, T1, T2, T3, T4, T5, T6>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>, i16: AssertDelegate<T16>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15 & T16>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>, i16: AssertDelegate<T16>, i17: AssertDelegate<T17>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15 & T16 & T17>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>, i16: AssertDelegate<T16>, i17: AssertDelegate<T17>, i18: AssertDelegate<T18>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15 & T16 & T17 & T18>;
export declare function and<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(i0: AssertDelegate<T0>, i1: AssertDelegate<T1>, i2: AssertDelegate<T2>, i3: AssertDelegate<T3>, i4: AssertDelegate<T4>, i5: AssertDelegate<T5>, i6: AssertDelegate<T6>, i7: AssertDelegate<T7>, i8: AssertDelegate<T8>, i9: AssertDelegate<T9>, i10: AssertDelegate<T10>, i11: AssertDelegate<T11>, i12: AssertDelegate<T12>, i13: AssertDelegate<T13>, i14: AssertDelegate<T14>, i15: AssertDelegate<T15>, i16: AssertDelegate<T16>, i17: AssertDelegate<T17>, i18: AssertDelegate<T18>, i19: AssertDelegate<T19>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15 & T16 & T17 & T18 & T19>;
export declare function and<T>(...arr: AssertDelegate<T>[]): AssertDelegate<T>;
export declare function cast<FromT, ToT>(canCastDelegate: AssertDelegate<FromT>, castDelegate: CastDelegate<FromT, ToT>, assertDelegate: AssertDelegate<ToT>): AssertDelegate<ToT>;
export declare function castFirst<FromT, ToT>(canCastDelegate: AssertDelegate<FromT>, castDelegate: CastDelegate<FromT, ToT>, assertDelegate: AssertDelegate<ToT>): AssertDelegate<ToT>;
export declare function assert<T>(assertDelegate: AssertDelegate<T>): (target: Object, propertyKey: string | symbol) => void;
export declare function optional<T>(assertDelegate: AssertDelegate<T>): AssertDelegate<T | undefined>;
export declare function nullable<T>(assertDelegate: AssertDelegate<T>): AssertDelegate<T | null>;
export declare function maybe<T>(assertDelegate: AssertDelegate<T>): AssertDelegate<T | undefined | null>;
export declare function array<T>(assertDelegate: AssertDelegate<T>): (name: string, mixed: any) => T[];
export declare function date(): AssertDelegate<Date>;
export declare function any(): AssertDelegate<any>;
export declare enum Enum {
}
export declare function enumeration<E extends typeof Enum>(e: E): AssertDelegate<E[keyof E]>;
export declare function enumeration(e: {}): AssertDelegate<string | number>;
export declare function boolean(): AssertDelegate<boolean>;
export declare function number(): AssertDelegate<number>;
export declare function integer(): AssertDelegate<number>;
export declare function naturalNumber(): AssertDelegate<number>;
export declare function string(): AssertDelegate<string>;
export declare function numberToBoolean(): AssertDelegate<boolean>;
export declare function stringToBoolean(): AssertDelegate<boolean>;
export declare function stringToNumber(): AssertDelegate<number>;
export declare function stringToInteger(): AssertDelegate<number>;
export declare function stringToNaturalNumber(): AssertDelegate<number>;
export declare function nil(): AssertDelegate<null>;
export declare function undef(): AssertDelegate<undefined>;
export declare function isCtor<T>(assertFunc: AssertFunc<T>): assertFunc is Constructor<T>;
export declare function toAssertDelegate<T>(assertFunc: AssertFunc<T>): AssertDelegate<T>;
export declare function toAssertDelegateExact<T>(assertFunc: AssertFunc<T>): AssertDelegate<T>;
export declare function intersect<T0 extends object>(i0: AssertFunc<T0>): AssertDelegate<T0>;
export declare function intersect<T0 extends object, T1 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>): AssertDelegate<T0 & T1>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>): AssertDelegate<T0 & T1 & T2>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>): AssertDelegate<T0 & T1 & T2 & T3>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>): AssertDelegate<T0 & T1 & T2 & T3 & T4>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>, i11: AssertFunc<T11>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>, i11: AssertFunc<T11>, i12: AssertFunc<T12>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>, i11: AssertFunc<T11>, i12: AssertFunc<T12>, i13: AssertFunc<T13>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>, i11: AssertFunc<T11>, i12: AssertFunc<T12>, i13: AssertFunc<T13>, i14: AssertFunc<T14>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>, i11: AssertFunc<T11>, i12: AssertFunc<T12>, i13: AssertFunc<T13>, i14: AssertFunc<T14>, i15: AssertFunc<T15>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object, T16 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>, i11: AssertFunc<T11>, i12: AssertFunc<T12>, i13: AssertFunc<T13>, i14: AssertFunc<T14>, i15: AssertFunc<T15>, i16: AssertFunc<T16>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15 & T16>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object, T16 extends object, T17 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>, i11: AssertFunc<T11>, i12: AssertFunc<T12>, i13: AssertFunc<T13>, i14: AssertFunc<T14>, i15: AssertFunc<T15>, i16: AssertFunc<T16>, i17: AssertFunc<T17>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15 & T16 & T17>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object, T16 extends object, T17 extends object, T18 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>, i11: AssertFunc<T11>, i12: AssertFunc<T12>, i13: AssertFunc<T13>, i14: AssertFunc<T14>, i15: AssertFunc<T15>, i16: AssertFunc<T16>, i17: AssertFunc<T17>, i18: AssertFunc<T18>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15 & T16 & T17 & T18>;
export declare function intersect<T0 extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object, T11 extends object, T12 extends object, T13 extends object, T14 extends object, T15 extends object, T16 extends object, T17 extends object, T18 extends object, T19 extends object>(i0: AssertFunc<T0>, i1: AssertFunc<T1>, i2: AssertFunc<T2>, i3: AssertFunc<T3>, i4: AssertFunc<T4>, i5: AssertFunc<T5>, i6: AssertFunc<T6>, i7: AssertFunc<T7>, i8: AssertFunc<T8>, i9: AssertFunc<T9>, i10: AssertFunc<T10>, i11: AssertFunc<T11>, i12: AssertFunc<T12>, i13: AssertFunc<T13>, i14: AssertFunc<T14>, i15: AssertFunc<T15>, i16: AssertFunc<T16>, i17: AssertFunc<T17>, i18: AssertFunc<T18>, i19: AssertFunc<T19>): AssertDelegate<T0 & T1 & T2 & T3 & T4 & T5 & T6 & T7 & T8 & T9 & T10 & T11 & T12 & T13 & T14 & T15 & T16 & T17 & T18 & T19>;
